version: "2"
services:
  postgresql:
    image: "docker.io/bitnami/postgresql:11"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_DB=${POSTGRESQL_DB}
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    volumes:
      - "postgresql_data:/bitnami/postgresql"
    expose:
      - 5432
    ports:
      - "15432:5432"
    mem_limit: 256m
    restart: unless-stopped
    
  keycloak-1:
    image: docker.io/bitnami/keycloak:latest
    expose:
      - 8080
    ports:
      - "80:8080"
    mem_limit: 1024m
    restart: unless-stopped
    volumes:
      - "/etc/hosts:/etc/hosts" ## poor man's DNS
      - /opt/keycloak/standalone-ha.xml:/bitnami/keycloak/configuration/standalone-ha.xml:ro
      - "/opt/keycloak/certs/:/opt/bitnami/keycloak/certs" ## map certificates to container
    environment:
      - KEYCLOAK_DATABASE_HOST=postgresql
      - KEYCLOAK_DATABASE_PORT=${POSTGRESQL_PORT}
      - KEYCLOAK_DATABASE_NAME=${POSTGRESQL_DB}
      - KEYCLOAK_DATABASE_SCHEMA=${POSTGRESQL_SCHEMA}
      - KEYCLOAK_DATABASE_USER=${POSTGRESQL_USER}
      - KEYCLOAK_DATABASE_PASSWORD=${POSTGRESQL_PASS}
      - KEYCLOAK_ENABLE_STATISTICS=true
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN_USER=${KEYCLOAK_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
      - KEYCLOAK_MANAGEMENT_USER=${KEYCLOAK_USER}
      - KEYCLOAK_MANAGEMENT_PASSWORD=${KEYCLOAK_PASSWORD}      
      - KEYCLOAK_JGROUPS_DISCOVERY_PROTOCOL=JDBC_PING
      - KEYCLOAK_JGROUPS_TRANSPORT_STACK=
      - 'KEYCLOAK_JGROUPS_DISCOVERY_PROPERTIES=datasource_jndi_name=>java:jboss/datasources/KeycloakDS, initialize_sql=>"CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"'
      - KEYCLOAK_CACHE_OWNERS_COUNT=3
      - KEYCLOAK_AUTH_CACHE_OWNERS_COUNT=3
      - KEYCLOAK_ENABLE_TLS=true
      - KEYCLOAK_TLS_KEYSTORE_FILE=/bitnami/keycloak/certs/keystore.jks
      - KEYCLOAK_TLS_TRUSTSTORE_FILE=/bitnami/keycloak/certs/truststore.jks
      - KEYCLOAK_TLS_KEYSTORE_PASSWORD=keystore_password
      - KEYCLOAK_TLS_TRUSTSTORE_PASSWORD=truststore_password
    depends_on:
      postgresql:
        condition: service_started
        
      
  keycloak-2:
    image: docker.io/bitnami/keycloak:latest
    expose:
      - 8080
    ports:
      - "81:8080"
    mem_limit: 1024m
    restart: unless-stopped
    volumes:
      - "/etc/hosts:/etc/hosts" ## poor man's DNS
      - /opt/keycloak/standalone-ha.xml:/bitnami/keycloak/configuration/standalone-ha.xml:ro
      - "/opt/keycloak/certs/:/opt/bitnami/keycloak/certs" ## map certificates to container
    environment:
      - KEYCLOAK_DATABASE_HOST=postgresql
      - KEYCLOAK_DATABASE_PORT=${POSTGRESQL_PORT}
      - KEYCLOAK_DATABASE_NAME=${POSTGRESQL_DB}
      - KEYCLOAK_DATABASE_SCHEMA=${POSTGRESQL_SCHEMA}
      - KEYCLOAK_DATABASE_USER=${POSTGRESQL_USER}
      - KEYCLOAK_DATABASE_PASSWORD=${POSTGRESQL_PASS}
      - KEYCLOAK_ENABLE_STATISTICS=true
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN_USER=${KEYCLOAK_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
      - KEYCLOAK_MANAGEMENT_USER=${KEYCLOAK_USER}
      - KEYCLOAK_MANAGEMENT_PASSWORD=${KEYCLOAK_PASSWORD}      
      - KEYCLOAK_JGROUPS_DISCOVERY_PROTOCOL=JDBC_PING
      - KEYCLOAK_JGROUPS_TRANSPORT_STACK=
      - 'KEYCLOAK_JGROUPS_DISCOVERY_PROPERTIES=datasource_jndi_name=>java:jboss/datasources/KeycloakDS, initialize_sql=>"CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"'
      - KEYCLOAK_CACHE_OWNERS_COUNT=3
      - KEYCLOAK_AUTH_CACHE_OWNERS_COUNT=3
      - KEYCLOAK_ENABLE_TLS=true
      - KEYCLOAK_TLS_KEYSTORE_FILE=/bitnami/keycloak/certs/keystore.jks
      - KEYCLOAK_TLS_TRUSTSTORE_FILE=/bitnami/keycloak/certs/truststore.jks
      - KEYCLOAK_TLS_KEYSTORE_PASSWORD=keystore_password
      - KEYCLOAK_TLS_TRUSTSTORE_PASSWORD=truststore_password
    depends_on:
      postgresql:
        condition: service_started
      
  keycloak-3:
    image: docker.io/bitnami/keycloak:latest ## user: root
    expose:
      - 8080
    ports:
      - "82:8080"
    mem_limit: 1024m  
    restart: unless-stopped
    volumes:
      - "/etc/hosts:/etc/hosts" ## poor man's DNS
      - /opt/keycloak/standalone-ha.xml:/bitnami/keycloak/configuration/standalone-ha.xml:ro
      - "/opt/keycloak/certs/:/opt/bitnami/keycloak/certs" ## map certificates to container
    environment:
      - KEYCLOAK_DATABASE_HOST=postgresql
      - KEYCLOAK_DATABASE_PORT=${POSTGRESQL_PORT}
      - KEYCLOAK_DATABASE_NAME=${POSTGRESQL_DB}
      - KEYCLOAK_DATABASE_SCHEMA=${POSTGRESQL_SCHEMA}
      - KEYCLOAK_DATABASE_USER=${POSTGRESQL_USER}
      - KEYCLOAK_DATABASE_PASSWORD=${POSTGRESQL_PASS}
      - KEYCLOAK_ENABLE_STATISTICS=true
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN_USER=${KEYCLOAK_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
      - KEYCLOAK_MANAGEMENT_USER=${KEYCLOAK_USER}
      - KEYCLOAK_MANAGEMENT_PASSWORD=${KEYCLOAK_PASSWORD}      
      - KEYCLOAK_JGROUPS_DISCOVERY_PROTOCOL=JDBC_PING
      - KEYCLOAK_JGROUPS_TRANSPORT_STACK=
      - 'KEYCLOAK_JGROUPS_DISCOVERY_PROPERTIES=datasource_jndi_name=>java:jboss/datasources/KeycloakDS, initialize_sql=>"CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"'
      - KEYCLOAK_CACHE_OWNERS_COUNT=3
      - KEYCLOAK_AUTH_CACHE_OWNERS_COUNT=3
      - KEYCLOAK_ENABLE_TLS=true
      - KEYCLOAK_TLS_KEYSTORE_FILE=/bitnami/keycloak/certs/keystore.jks
      - KEYCLOAK_TLS_TRUSTSTORE_FILE=/bitnami/keycloak/certs/truststore.jks
      - KEYCLOAK_TLS_KEYSTORE_PASSWORD=keystore_password
      - KEYCLOAK_TLS_TRUSTSTORE_PASSWORD=truststore_password
    depends_on:
      postgresql:
        condition: service_started
        
  loadbalancer:
    build: load-balancer/wildfly-modcluster
    image: keycloak_test_loadbalancer:${KEYCLOAK_VERSION:-latest}
#   depends_on:
#     keycloak:
#       condition: service_healthy
    cpuset: ${LB_CPUSET:-1}
    mem_limit: ${LB_MEMLIMIT:-1500m}
    networks:
      - keycloak
#     - loadbalancing
    environment:
      PRIVATE_SUBNET: 10.0.1.0/24
#     PUBLIC_SUBNET: 10.0.2.0/24
      JAVA_OPTS: ${LB_JVM_MEMORY:--Xms64m -Xmx1024m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m} -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true
      HTTP_MAX_CONNECTIONS: ${LB_HTTP_MAX_CONNECTIONS:-50000}
      WORKER_IO_THREADS: ${LB_WORKER_IO_THREADS:-2}
      WORKER_TASK_MAX_THREADS: ${LB_WORKER_TASK_MAX_THREADS:-16}
      JSTAT: "${LB_JSTAT:-false}"
    ports:
      - "8080:8080"
      - "9990:9990"
      
volumes:
  postgresql_data:
    driver: local

networks:
  keycloak:
    ipam:
      config:
        - subnet: 10.0.1.0/24
# loadbalancing:
#   ipam:
#     config:
#       - subnet: 10.0.2.0/24